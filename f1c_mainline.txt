=====Buildroot编译=====

=====编译=====
cd到源码目录，然后调用defconfig，比如我这里源码目录是mpi-r
  cd ~/mpi-r/
现在源码里做了三个defconfig，存放在源码的configs文件夹下，分别是widora_mangopi_r1_defconfig  widora_mangopi_r2_defconfig  widora_mangopi_r3_defconfig。
  make widora_mangopi_r3_defconfig
make -j4是多线程编译方式，后边的数字代表你的计算机内核线程数。
  make -j4
 

编译完后，输出文件在 output/images/下：
  widora@Ubuntu:~/mpi-r$ ls output/images/*.img
  output/images/sysimage-nand.img  output/images/sysimage-nor.img  output/images/sysimage-sdcard.img

<wrap hi>注意：</wrap>默认[[https://github.com/aodzip/buildroot-tiny200/blob/master/board/widora/mangopi/r3/devicetree/linux/devicetree.dts|dts]]编译出来的是nor版本，如需要nand版本，需要在55行后边加disabled
  55        spi-max-frequency = <50000000>;
  56        status = "disabled";
  
同时再将93行的注释掉
  93        //status = "disabled";

<wrap hi>此修改方法在20210209之前有效，接下来代码库会有个大的更新</wrap>
=====常用操作=====
===修改dts后，如何编译生效===
  rm ./output/images/*.dtb
  make linux-clean-for-rebuild
  make linux -j8
  make




===配置菜单===
所有被支持的make命令可以通过make help打印出来：
  make clean   (清理编译输出文件)
  make distclean   (不仅清理编译输出，还清理dl目录以及config文件，慎用)
  make toolchain  (编译一份适应目标cpu的工具链)
  make menuconfig (配置软件包菜单)
  make busybox-menuconfig  (busybox软件包配置)
  make uboot-menuconfig (uboot软件包配置)
  make linux-menuconfig (linux软件包配置)
  make -j4  (4线程编译)

